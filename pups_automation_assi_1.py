# -*- coding: utf-8 -*-
"""pups_automation_assi_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HzbGm4ClYR7iRoreY5IeGub0fd2EnrY4
"""

import pandas as pd
import requests

# Define the list of sheet names
sheet_names = ["Saturday", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"]

# Create an empty dictionary to store DataFrames for each sheet
dfs = {}

# Read data from each sheet and store it in the dictionary
excel_file_path = '/content/Excel.xlsx'  # Replace with the actual path to your Excel file
for sheet_name in sheet_names:
    df = pd.read_excel(excel_file_path, sheet_name=sheet_name)
    dfs[sheet_name] = df

# Reset any custom display options to their default values if needed
pd.reset_option('display.max_rows')
pd.reset_option('display.max_columns')

def google_search_autocomplete(query, api_key):
    url = "https://www.googleapis.com/customsearch/v1"
    params = {
        'q': query,
        'key': api_key,
        'cx': '57aed0bf336ad434f'
    }

    response = requests.get(url, params=params)
    data = response.json()

    if 'items' in data:
        return [item['title'] for item in data['items']]
    else:
        return []

def main():
    api_key = "AIzaSyBgkgGHh1_GJ_OGLsj3Xd_Urxwyw4scaEo"

    for sheet_name, df in dfs.items():
        if "Unnamed: 2" in df.columns:
            queries = df["Unnamed: 2"].dropna().unique()
            for query in queries:
                autocomplete_results = google_search_autocomplete(query, api_key)

                if autocomplete_results:
                    shortest = min(autocomplete_results, key=len)
                    longest = max(autocomplete_results, key=len)

                    # Update the DataFrame with the results
                    df.loc[df["Unnamed: 2"] == query, "Unnamed: 3"] = longest
                    df.loc[df["Unnamed: 2"] == query, "Unnamed: 4"] = shortest

    # Display the updated data from each sheet
    for sheet_name, df in dfs.items():
        print(f"Sheet: {sheet_name}")
        print(df)  # Display the entire DataFrame

if __name__ == "__main__":
    main()